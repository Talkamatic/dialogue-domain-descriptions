node('tdm') {
    properties([
        parameters([
            string(
                defaultValue: 'refs/heads/master',
                description: 'The Git reference used in checkout',
                name: 'GERRIT_REFSPEC'
            ),
            string(
                defaultValue: 'master',
                description: 'The Git branch used in checkout',
                name: 'GERRIT_BRANCH'
            ),
        ]),
        buildDiscarder(
            logRotator(
                artifactDaysToKeepStr: '',
                artifactNumToKeepStr: '',
                daysToKeepStr: '',
                numToKeepStr: '10'
            )
        ),
        disableConcurrentBuilds(),
        pipelineTriggers([
            gerrit(
                customUrl: '',
                gerritProjects:[
                    [
                        branches: [
                            [
                                compareType: 'ANT',
                                pattern: '**'
                            ]
                        ],
                        compareType: 'PLAIN',
                        disableStrictForbiddenFileVerification: false,
                        pattern: 'github/dialogue-domain-descriptions'
                    ]
                ],
                serverName: 'Talkamatic',
                triggerOnEvents: [
                    patchsetCreated(
                        excludeDrafts: true,
                        excludeNoCodeChange: false,
                        excludeTrivialRebase: false
                    )
                ]
            )
        ])
    ])

    stage('cleanup') {
        step([$class: 'WsCleanup'])
    }

    stage('checkout') {
        checkout(
            changelog: false,
            poll: false,
            scm: [
                $class: 'GitSCM',
                branches: [
                    [name: params.GERRIT_BRANCH]
                ],
                doGenerateSubmoduleConfigurations: false,
                extensions: [
                    [
                        $class: 'BuildChooserSetting',
                        buildChooser: [
                            $class: 'GerritTriggerBuildChooser'
                        ]
                    ]
                ],
                submoduleCfg: [],
                userRemoteConfigs: [
                    [
                        credentialsId: 'jenkinsatgerrit',
                        refspec: params.GERRIT_REFSPEC,
                        url: 'ssh://jenkins@gerrit.talkamatic.se:29418/github/dialogue-domain-descriptions'
                    ]
                ]
            ]
        )
    }

    stage('prepare') {
        sh '''mkdir artifacts'''

        step([$class: 'CopyArtifact', filter: 'dist/*.whl', fingerprintArtifacts: true, projectName: 'tdm-nightly', selector: [$class: 'StatusBuildSelector', stable: false], target: 'artifacts'])

        sh '''#!/bin/bash -ex
        virtualenv venv
        '''
    }

    stage('install') {
        files = findFiles(glob: "artifacts/dist/*.whl")
        for ( int i = 0; i < files.size(); i++ ) {
            def file = files[i]

            try {
                sh '''#!/bin/bash -ex
                source venv/bin/activate
                pip install ''' + file.path
            } catch(error) {
                echo "error: " + error
            }
        }
    }

    stage('build') {
        sh '''#!/bin/bash -ex
        source venv/bin/activate
        cd incremental_search
        tdm build
        cd ..
        '''
    }

    stage('test') {
        sh '''#!/bin/bash -ex
        source venv/bin/activate

        export FLASK_APP=incremental_search/http_service/http_service_for_incremental_search.py
        flask run --port 10104 &
        PID=$!

        cd incremental_search
        tdm test eng
        cd ..

        kill $PID
        '''
    }
}