node('tdm') {
    properties([
        buildDiscarder(
            logRotator(
                artifactDaysToKeepStr: '',
                artifactNumToKeepStr: '',
                daysToKeepStr: '',
                numToKeepStr: '10'
            )
        ),
        disableConcurrentBuilds()
    ])

    stage('cleanup') {
        step([$class: 'WsCleanup'])
    }

    stage('checkout') {
        checkout([$class: 'GitSCM', branches: [[name: 'refs/heads/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'jenkinsatgerrit', url: 'https://github.com/Talkamatic/dialogue-domain-descriptions.git']]])
    }

    stage('prepare') {
        sh '''mkdir artifacts'''

        step([$class: 'CopyArtifact', filter: 'dist/*.whl', fingerprintArtifacts: true, projectName: 'tdm-nightly', selector: [$class: 'StatusBuildSelector', stable: false], target: 'artifacts'])

        sh '''#!/bin/bash -ex
        virtualenv venv
        '''
    }

    stage('install') {
        files = findFiles(glob: "artifacts/dist/*.whl")
        for ( int i = 0; i < files.size(); i++ ) {
            def file = files[i]

            try {
                sh '''#!/bin/bash -ex
                source venv/bin/activate
                pip install ''' + file.path
            } catch(error) {
                echo "error: " + error
            }
        }
    }

    stage('build') {
        sh '''#!/bin/bash -ex
        source venv/bin/activate
        cd basic_query
        tdm build
        cd ..
        '''
    }

    stage('test') {
        sh '''#!/bin/bash -ex
        source venv/bin/activate

        export FLASK_APP=http_service/http_service.py
        flask run --port 10103 &
        PID=$!

        cd basic_query
        tdm test eng
        cd ..

        kill $PID
        '''
    }
}